definitions:
  model.EditResponse:
    properties:
      status:
        example: ok
        type: string
    type: object
  model.UserInfo:
    properties:
      color:
        example: Blue
        type: string
      user:
        example: Ye
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: wso-dev@wso.williams.edu
    name: WSO Devs
    url: https://wso.williams.edu/
  description: This is a sample project for onboarding WSO members.
  title: WSO Backend Onboarding Project
  version: "1.0"
paths:
  /api/v1/admin/edit/:
    post:
      consumes:
      - application/json
      description: Parse the input body json, add/edit it in fakedatabase, and then
        write the responses
      parameters:
      - description: user value to edit
        in: body
        name: equest
        required: true
        schema:
          $ref: '#/definitions/model.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.EditResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.EditResponse'
      security:
      - BasicAuth: []
      summary: edits the currently logged in user in fakedatabse
  /api/v1/user/{name}:
    get:
      description: Parse the input path param name, query it in fakedatabase, and
        then write the responses based on whether user exists in database
      parameters:
      - description: name of the user
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserInfo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.UserInfo'
      summary: lists the value associated with user from fakedatabase
  /ping:
    get:
      description: sanity check, return "Hello World"
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: ping example
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
